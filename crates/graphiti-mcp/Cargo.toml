[package]
name = "graphiti-mcp"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true

[[bin]]
name = "graphiti-mcp-server"
path = "src/main.rs"

[dependencies]
# Local dependencies
graphiti-core = { path = "../graphiti-core" }
graphiti-cozo = { path = "../graphiti-cozo" }
graphiti-search = { path = "../graphiti-search" }
graphiti-llm = { path = "../graphiti-llm", features = ["embed-anything"] }
graphiti-ner = { path = "../graphiti-ner" }

# Async
tokio.workspace = true
tokio-stream.workspace = true
futures.workspace = true
async-trait.workspace = true

# Web
axum.workspace = true
tower = { workspace = true, features = ["retry", "timeout", "util", "buffer", "limit", "load-shed"] }
# Enable extra features required by imports in main.rs
tower-http = { workspace = true, features = ["trace", "cors", "timeout", "limit"] }
futures-util = "0.3"
async-stream = "0.3"
axum-server = { version = "0.7", features = ["tls-rustls"] }

# Serialization
serde.workspace = true
serde_json.workspace = true

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# Utilities
uuid.workspace = true
chrono.workspace = true
glob = "0.3"

# Logging and tracing
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-opentelemetry.workspace = true
metrics.workspace = true
metrics-exporter-prometheus.workspace = true

# Configuration
clap.workspace = true
config.workspace = true
toml.workspace = true
dotenvy.workspace = true

# Rate limiting & utilities
governor.workspace = true
nonzero_ext.workspace = true
once_cell.workspace = true

# Metrics (already declared above)

# OpenTelemetry
opentelemetry.workspace = true
opentelemetry-otlp.workspace = true

[features]
default = []
rust-bert-ner = ["graphiti-ner/rust-bert-ner"]

[dev-dependencies]
reqwest.workspace = true
testcontainers.workspace = true