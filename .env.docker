# Graphiti Rust MCP Server - Docker Environment Configuration
# Copy this file to .env and customize for your deployment

# =============================================================================
# LLM Provider API Keys (Choose one or more)
# =============================================================================

# OpenAI (GPT models)
OPENAI_API_KEY=your-openai-api-key-here

# Groq (Fast inference)
GROQ_API_KEY=your-groq-api-key-here

# Anthropic (Claude models)
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Google (Gemini models)
GOOGLE_API_KEY=your-google-api-key-here

# =============================================================================
# Embedding Provider API Keys (Optional - Ollama provides free embeddings)
# =============================================================================

# Voyage AI
VOYAGE_API_KEY=your-voyage-api-key-here

# Cohere
COHERE_API_KEY=your-cohere-api-key-here

# =============================================================================
# Database Configuration
# =============================================================================

# CozoDB Configuration (embedded graph database)
COZO_ENGINE=sqlite                     # Storage engine: "mem", "sqlite", "rocksdb"
COZO_PATH=/var/lib/graphiti/cozo/graphiti.db  # Database file path
COZO_OPTIONS={}                        # Additional CozoDB options

# =============================================================================
# Server Configuration
# =============================================================================

# MCP Server
MCP_SERVER_PORT=8080
MCP_SERVER_HOST=0.0.0.0

# Logging
RUST_LOG=info,graphiti=debug

# =============================================================================
# Storage Configuration
# =============================================================================

# Search and vector storage paths
SEARCH_INDEX_PATH=/var/lib/graphiti/search
VECTOR_INDEX_PATH=/var/lib/graphiti/vectors

# =============================================================================
# Feature Flags
# =============================================================================

# Enable parallel runtime for better performance
USE_PARALLEL_RUNTIME=false

# Enable entity deduplication
ENABLE_DEDUPLICATION=true

# Generate embeddings for semantic search
GENERATE_EMBEDDINGS=true

# =============================================================================
# Performance Tuning
# =============================================================================

# CozoDB Performance Settings
COZO_MEMORY_LIMIT=1G                   # Memory limit for CozoDB operations
COZO_CACHE_SIZE=256M                   # Cache size for better performance

# Ollama Configuration
OLLAMA_HOST=0.0.0.0
OLLAMA_MODELS_PATH=/root/.ollama

# =============================================================================
# Development Settings
# =============================================================================

# Enable debug mode
DEBUG=false

# Hot reload for development
HOT_RELOAD=false

# =============================================================================
# Security Settings (Production)
# =============================================================================

# Change these in production!
# GRAFANA_ADMIN_PASSWORD=your-secure-password-here
# COZO_ENCRYPTION_KEY=your-encryption-key-here  # For encrypted CozoDB storage

# =============================================================================
# Optional: Monitoring Configuration
# =============================================================================

# Prometheus
PROMETHEUS_PORT=9090

# Grafana
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=admin

# =============================================================================
# Free Mode Configuration
# =============================================================================

# For completely free setup, only these are needed:
# - No API keys required
# - Uses Ollama for LLM and embeddings
# - Uses CozoDB for graph storage
# - Set RUST_LOG=info,graphiti=debug for logging

# Free mode server port (to avoid conflicts)
FREE_MODE_PORT=8091
