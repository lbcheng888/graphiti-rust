[workspace]
resolver = "2"
members = [
    "crates/graphiti-core",
    "crates/graphiti-mcp",
    "crates/graphiti-cozo",
    "crates/graphiti-search",
    "crates/graphiti-llm",
    "crates/graphiti-ner",
    "crates/graphiti-prompts",
    "crates/graphiti-distributed",
]

[workspace.package]
version = "0.1.0"
authors = ["Graphiti Contributors"]
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/getzep/graphiti"
rust-version = "1.80"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.41", features = ["full"] }
tokio-stream = "0.1"

# Web and networking
axum = { version = "0.7", features = ["macros", "ws"] }
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls", "stream"] }
tower = { version = "0.5", features = ["retry", "timeout", "util"] }
tower-http = { version = "0.6", features = ["trace", "cors"] }

# P2P networking
libp2p = { version = "0.54", features = ["kad", "mdns", "noise", "tcp", "yamux", "gossipsub", "identify", "ping", "autonat", "relay"] }
libp2p-swarm = "0.45"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.11"

# Database drivers
cozo = { version = "0.7", default-features = false, features = ["graph-algo"] }

# NLP (Named Entity Recognition)
candle-core = { version = "0.9.1" }
candle-nn = { version = "0.9.1" }
candle-transformers = { version = "0.9.1" }
tokenizers = { version = "0.20" }
hf-hub = { version = "0.3", features = ["tokio"] }
rust-bert = { version = "0.23" }

# Search
tantivy = "0.22"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Utilities
uuid = { version = "1.11", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
once_cell = "1.20"
futures = "0.3"
async-trait = "0.1"
pin-project = "1.1"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Configuration
config = "0.14"
toml = "0.8"
dotenvy = "0.15"
clap = { version = "4.5", features = ["derive", "env"] }

# Testing
mockall = "0.13"
proptest = "1.6"
criterion = { version = "0.5", features = ["async_tokio"] }
testcontainers = "0.24"
testcontainers-modules = { version = "0.12", features = ["neo4j"] }
tempfile = "3.14"

# Performance
moka = { version = "0.12", features = ["future"] }
dashmap = "6.1"
governor = "0.7"
nonzero_ext = "0.3"

# Security
jsonwebtoken = "9.3"
argon2 = "0.5"

# Schema validation
jsonschema = "0.26"
validator = { version = "0.19", features = ["derive"] }

# Compression
zstd = "0.13"

# Template engine
handlebars = "6.1"

# Metrics
metrics = "0.24"
metrics-exporter-prometheus = "0.16"

# OpenTelemetry
opentelemetry = "0.27"
opentelemetry-otlp = "0.27"
tracing-opentelemetry = "0.28"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.bench]
inherits = "release"

[profile.dev]
opt-level = 0
debug = true

[profile.test]
opt-level = 0
debug = true

# Root package for examples
[package]
name = "graphiti-rust"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[[example]]
name = "llm_integration_test"
path = "examples/llm_integration_test.rs"

[[example]]
name = "end_to_end_workflow"
path = "examples/end_to_end_workflow.rs"

[[example]]
name = "performance_benchmark"
path = "examples/performance_benchmark.rs"

[[example]]
name = "real_data_integration"
path = "examples/real_data_integration.rs"

# Disable building distributed examples until crate is ready
[[example]]
name = "distributed_network_example"
path = "examples/distributed_network_example.rs"
required-features = ["never"]

[[example]]
name = "distributed_knowledge_graph"
path = "examples/distributed_knowledge_graph.rs"
required-features = ["never"]

[dependencies]
graphiti-llm = { path = "crates/graphiti-llm" }
tokio.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
reqwest.workspace = true
serde_json.workspace = true
